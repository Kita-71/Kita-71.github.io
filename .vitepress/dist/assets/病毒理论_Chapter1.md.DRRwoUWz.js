import{_ as l,c as a,o as i,a1 as e}from"./chunks/framework.BwTyoF0R.js";const t="/assets/Untitled.BQyHSaNd.png",r="/assets/Untitled%201.Dv6ey0rx.png",o="/assets/Untitled%202.vFcE4key.png",k=JSON.parse('{"title":"第一章 病毒基本介绍","description":"","frontmatter":{},"headers":[],"relativePath":"病毒理论/Chapter1.md","filePath":"病毒理论/Chapter1.md"}'),h={name:"病毒理论/Chapter1.md"},n=e('<h1 id="第一章-病毒基本介绍" tabindex="-1">第一章 病毒基本介绍 <a class="header-anchor" href="#第一章-病毒基本介绍" aria-label="Permalink to &quot;第一章 病毒基本介绍&quot;">​</a></h1><h2 id="计算机病毒的定义" tabindex="-1">计算机病毒的定义 <a class="header-anchor" href="#计算机病毒的定义" aria-label="Permalink to &quot;计算机病毒的定义&quot;">​</a></h2><ol><li><p>狭义定义</p><blockquote><p>《中华人民共和国计算机信息系统安全保护条例》中，计算机病毒被定义为：“计算机病毒是指编制或者在计算机程序中插入的破坏计算机功能或者破坏数据，影响计算机使用并且能够自我复制的一组计算机指令或者程序代码</p></blockquote></li><li><p>广义定义</p><blockquote><p>计算机病毒(Computer Virus)，是一种人为制造的、能够进行自我复制的、具有对计算机资源进行破坏作用的一组程序或指令集合</p></blockquote><ul><li>主动传染：文件型病毒、网络蠕虫等</li><li>被动传染：用户拷贝了寄生着病毒的文件</li></ul></li></ol><h2 id="计算机病毒的特征" tabindex="-1">计算机病毒的特征 <a class="header-anchor" href="#计算机病毒的特征" aria-label="Permalink to &quot;计算机病毒的特征&quot;">​</a></h2><ol><li>可执行性（程序性）→可防治性、可清除性 <ol><li>人为特制→病毒各式各样</li><li>反病毒技术：提前获得控制权，识别并清楚</li></ol></li><li>传染性 <ol><li><p>是否具有传染性，是判别一个程序是否为计算机病毒的首要条件。</p><p>文件型病毒：是否感染了一定数量的文件</p><p>网络蠕虫：是否对多个目标发起攻击</p></li><li><p>指病毒具有把自身复制到其他程序的能力。</p></li></ol></li><li>非授权性</li><li>隐蔽性 <ol><li>传染的隐蔽性</li><li>存在的隐蔽性（不破坏系统的正常功能）</li></ol></li><li>潜伏性 <ol><li>是否潜伏取决于病毒的目的，是破坏计算机、偷窃数据，还是联合其他被感染的计算机实施复杂的联合攻击。</li><li>潜伏性愈好，其在系统中的存在时间就会愈长，病毒的传染范围就会愈大</li></ol></li><li>可触发性 <ol><li>可触发性与潜伏性是配对的，潜伏后必须要能被触发，否则就失去了杀伤力。</li><li>计算机病毒因某个事件或数值的出现，诱使病毒实施感染或进行攻击的特性</li></ol></li><li>破坏性</li><li>主动性</li><li>针对性：特殊软硬件环境</li><li>衍生性：旧病毒给新病毒提供技术支持</li><li>寄生性：依赖于宿主程序的执行</li><li>不可预见性：没有反病毒工具可以预见并防御所有病毒</li><li>诱惑欺骗性：我来发福利了，欸嘿，发的是病毒</li><li>持久性：很难恢复，破坏不可逆</li></ol><h2 id="病毒的本质" tabindex="-1">病毒的本质 <a class="header-anchor" href="#病毒的本质" aria-label="Permalink to &quot;病毒的本质&quot;">​</a></h2><p>人为制造的，可以自我复制的计算机程序</p><h2 id="病毒的分类" tabindex="-1">病毒的分类 <a class="header-anchor" href="#病毒的分类" aria-label="Permalink to &quot;病毒的分类&quot;">​</a></h2><h3 id="破坏能力、破坏情况" tabindex="-1">破坏能力、破坏情况 <a class="header-anchor" href="#破坏能力、破坏情况" aria-label="Permalink to &quot;破坏能力、破坏情况&quot;">​</a></h3><ul><li>破坏能力：无害、无危险、危险、非常危险</li><li>破坏情况：良性（无害无危险）、恶性（危险、非常危险）</li></ul><h3 id="攻击的操作系统" tabindex="-1">攻击的操作系统 <a class="header-anchor" href="#攻击的操作系统" aria-label="Permalink to &quot;攻击的操作系统&quot;">​</a></h3><p>Linux、Windows、Dos、Unix、Android…</p><h3 id="攻击的机型" tabindex="-1">攻击的机型 <a class="header-anchor" href="#攻击的机型" aria-label="Permalink to &quot;攻击的机型&quot;">​</a></h3><p>微型（巴基斯坦病毒）、工作站、小型计算机、中大型计算机</p><h3 id="特有的算法" tabindex="-1">特有的算法 <a class="header-anchor" href="#特有的算法" aria-label="Permalink to &quot;特有的算法&quot;">​</a></h3><ul><li>伴随型病毒 病毒并不改变文件本身，它们根据算法产生文件的伴随体。</li><li>“蠕虫”型病毒 蠕虫通过计算机网络传播，不改变文件和资料信息，除了内存，一般不占用其它资源</li><li>寄生型病毒 除了伴随型和“蠕虫”型，其它病毒均可称为寄生型病毒，依附在系统的引导扇区或文件中</li><li>练习型病毒 病毒自身包含错误，不能进行很好的传播，例如一些在调试阶段的病毒</li><li>变形病毒(又称幽灵病毒) 一般由一段混有无关指令的解码算法和被变化过的病毒体组成</li></ul><h3 id="链接方式" tabindex="-1">链接方式 <a class="header-anchor" href="#链接方式" aria-label="Permalink to &quot;链接方式&quot;">​</a></h3><p>源码型（高级语言编译得到）、嵌入型（CIH）、外壳型（Shell，在程序的首尾）、译码型（解释执行）、操作系统型</p><h3 id="传播介质" tabindex="-1">传播介质 <a class="header-anchor" href="#传播介质" aria-label="Permalink to &quot;传播介质&quot;">​</a></h3><p>单机、网络</p><h3 id="寄生对象和驻留方式" tabindex="-1">寄生对象和驻留方式 <a class="header-anchor" href="#寄生对象和驻留方式" aria-label="Permalink to &quot;寄生对象和驻留方式&quot;">​</a></h3><ul><li>寄生对象：引导、文件、混合</li><li>是否驻留内存：驻留——中断向量，系统所有程序执行都会执行病毒</li></ul><h2 id="恶意程序、蠕虫、木马" tabindex="-1">恶意程序、蠕虫、木马 <a class="header-anchor" href="#恶意程序、蠕虫、木马" aria-label="Permalink to &quot;恶意程序、蠕虫、木马&quot;">​</a></h2><ul><li><p>恶意程序：未经授权便干扰或破坏计算系统/网络的程序或代码</p><ul><li>依赖于主机程序的恶意程序</li><li>独立于主机程序的恶意程序</li></ul><p><img src="'+t+'" alt="Untitled"></p></li><li><p>蠕虫</p><ul><li><p>一种独立的可执行程序，主要由主程序和引导程序两部分组成</p><ul><li>主程序：用于干正事</li><li>引导程序：把蠕虫带入计算机</li></ul></li><li><p>蠕虫程序的工作流程可以分为漏洞扫描、攻击（获取权限）、传染（发送蠕虫本体）、现场处理（隐藏、信息收集等）四个阶段</p><p><img src="'+r+'" alt="Untitled"></p></li><li><p>特性：方式多、传播速度快、难以清理、破坏性强</p></li></ul></li><li><p>木马（特洛伊木马）</p><ul><li>表面上是有用的，实际上是有毒的</li><li>客户端、服务端</li></ul></li></ul><h2 id="命名规则" tabindex="-1">命名规则 <a class="header-anchor" href="#命名规则" aria-label="Permalink to &quot;命名规则&quot;">​</a></h2><ul><li>通用的：发作时间、症状、传染方式、自身宣布的、发现地、字节长度</li><li>容易重名、相同病毒有不同名字</li><li>国际惯例：前缀+病毒名+后缀 <ul><li>前缀：发作的操作系统或类型</li><li>后缀：区分病毒家族各病毒的不同（类似于版本号？）</li><li>例如：WM.Cap.A A表示在Cap病毒家族中的一个变种，WM表示该病毒是一个Word宏(Macro)病毒</li><li>优先级：病毒的发现者(或制造者)→病毒的发作症状→病毒的发源地→病毒代码中的特征字符串</li></ul></li><li>由于存在 “灵活”的命名规则和惯例，再加上杀毒软件开发商各自的命名体系存在差异、计算机病毒研究学者/反病毒人员在为病毒命名时的个人观点、所依据的方法也各不相同，最终造成同种病毒出现不同名称的混乱现象</li><li>病毒命名可以做出更细致的规定，如： [病毒前缀]+[主要变量]+[次要变量]+[病毒名]+[病毒后缀] 比如一个病毒名为：DosVirus.com.BOOT.kot.B，那么可以解释为：这是一个DOS病毒，<a href="http://xn--rmqa802lekg.com/" target="_blank" rel="noreferrer">仅仅感染.COM</a>，感染引导区，病毒名为kot，版本号为B。</li></ul><h2 id="危害" tabindex="-1">危害 <a class="header-anchor" href="#危害" aria-label="Permalink to &quot;危害&quot;">​</a></h2><p>蓄意破坏、偶然性破坏、附带性破坏、心理和社会危害</p><h2 id="症状" tabindex="-1">症状 <a class="header-anchor" href="#症状" aria-label="Permalink to &quot;症状&quot;">​</a></h2><h2 id="传播途径" tabindex="-1">传播途径 <a class="header-anchor" href="#传播途径" aria-label="Permalink to &quot;传播途径&quot;">​</a></h2><p>不可移动、移动设备、有线网络、无线网络</p><h2 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h2><p>开发→传染→潜伏（静态、动态）→发作期→发现→消化→消亡</p><h2 id="渊源" tabindex="-1">渊源 <a class="header-anchor" href="#渊源" aria-label="Permalink to &quot;渊源&quot;">​</a></h2><p>游戏、软件加密、坏人、研究但被泄露、APT（政治、军事等目的）</p><h2 id="防治" tabindex="-1">防治 <a class="header-anchor" href="#防治" aria-label="Permalink to &quot;防治&quot;">​</a></h2><p>主动预防、被动处理</p><h2 id="研究原则" tabindex="-1">研究原则 <a class="header-anchor" href="#研究原则" aria-label="Permalink to &quot;研究原则&quot;">​</a></h2><p>自尊自爱自律自强</p><p><img src="'+o+'" alt="Untitled"></p>',40),d=[n];function s(p,u,c,b,q,m){return i(),a("div",null,d)}const f=l(h,[["render",s]]);export{k as __pageData,f as default};
