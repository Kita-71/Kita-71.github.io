import{_ as t,c as a,o as l,a1 as e}from"./chunks/framework.BwTyoF0R.js";const i="/assets/Untitled%2021.DjtXilcr.png",s="/assets/Untitled%2022.Dlr0xrlv.png",r="/assets/Untitled%2023.COXU-RWB.png",n="/assets/Untitled%2024.Dg1_p-xS.png",o="/assets/Untitled%2025.BRtQIJMd.png",p="/assets/Untitled%2026.DVnB4Q3d.png",c="/assets/Untitled%2027.BRYzBP3b.png",P=JSON.parse('{"title":"第二章 内存中的病毒","description":"","frontmatter":{},"headers":[],"relativePath":"病毒理论/Chapter2.md","filePath":"病毒理论/Chapter2.md"}'),d={name:"病毒理论/Chapter2.md"},_=e('<h1 id="第二章-内存中的病毒" tabindex="-1">第二章 内存中的病毒 <a class="header-anchor" href="#第二章-内存中的病毒" aria-label="Permalink to &quot;第二章 内存中的病毒&quot;">​</a></h1><h2 id="病毒基本能力" tabindex="-1">病毒基本能力 <a class="header-anchor" href="#病毒基本能力" aria-label="Permalink to &quot;病毒基本能力&quot;">​</a></h2><ul><li>执行 --最为重要，不能执行一切无用</li><li>潜伏 <ul><li>病毒执行并非简单执行自己的代码，它还需要执行被感染对象正常的代码，否则无法潜伏。</li></ul></li><li>破坏</li><li>传染</li></ul><h2 id="内存模拟病毒" tabindex="-1">内存模拟病毒 <a class="header-anchor" href="#内存模拟病毒" aria-label="Permalink to &quot;内存模拟病毒&quot;">​</a></h2><p><img src="'+i+'" alt="Untitled"></p><h3 id="总体流程" tabindex="-1">总体流程 <a class="header-anchor" href="#总体流程" aria-label="Permalink to &quot;总体流程&quot;">​</a></h3><p><img src="'+s+'" alt="Untitled"></p><ul><li>修改随机基址为固定基址</li></ul><ol><li><p>插入跳转指令jump</p><p><img src="'+r+'" alt="Untitled"></p></li><li><p>计算jmp的偏移</p><p><img src="'+n+'" alt="Untitled"></p></li><li><p>覆盖原5个字节的指令</p></li><li><p>覆盖打印指令后的指令</p><p><img src="'+o+'" alt="Untitled"></p></li><li><p>跳回指令</p><p><img src="'+p+'" alt="Untitled"></p></li></ol><h2 id="文件直接修改" tabindex="-1">文件直接修改 <a class="header-anchor" href="#文件直接修改" aria-label="Permalink to &quot;文件直接修改&quot;">​</a></h2><p><img src="'+c+'" alt="Untitled"></p><ul><li>558BEC是个函数都有</li></ul>',12),h=[_];function m(u,g,U,f,b,q){return l(),a("div",null,h)}const B=t(d,[["render",m]]);export{P as __pageData,B as default};
